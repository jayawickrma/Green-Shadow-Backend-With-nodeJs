generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Crop Entity
model Crop {
  cropCode       Int     @id @default(autoincrement())
  cropName       String
  scientificName String
  category       String
  season         String
  cropImage      String  @db.LongText
  logList        Log[]   @relation("CropLog")
  fieldList      Field[] @relation("CropField")
}

// Equipment Entity
model Equipment {
  equipmentCode             Int            @id @default(autoincrement())
  name                      String
  type                      String
  status                    String
  availableCount            Int
  staffEquipmentDetailsList StaffDetails[]
  fieldList                 Field[]        @relation("EquipmentField")
}

// Field Entity
model Field {
  fieldCode      Int         @id @default(autoincrement())
  name           String
  location       String
  extentSize     Float
  fieldImage1    String      @db.LongText
  fieldImage2    String      @db.LongText
  equipmentsList Equipment[] @relation("EquipmentField")
  staffList      Staff[]     @relation("FieldStaff")
  logList        Log[]       @relation("FieldLog")
  cropList       Crop[]      @relation("CropField")
}

// Log Entity
model Log {
  logCode       Int     @id @default(autoincrement())
  date          String
  logDetails    String
  observedImage String  @db.LongText
  staffList     Staff[] @relation("LogStaff")
  cropList      Crop[]  @relation("CropLog")
  fieldList     Field[] @relation("FieldLog")
}

// StaffDetails Entity
model StaffDetails {
  id                Int       @id @default(autoincrement())
  useEquipmentCount Int
  staffEntity       Staff     @relation(fields: [staffEntityId], references: [memberCode])
  equipmentEntity   Equipment @relation(fields: [equipmentEntityId], references: [equipmentCode])
  staffEntityId     Int
  equipmentEntityId Int
}

// Staff Entity
model Staff {
  memberCode                Int            @id @default(autoincrement())
  firstName                 String
  lastName                  String
  joinedDate                String
  dateOfBirth               String
  gender                    String
  designation               String
  addressLine1              String
  addressLine2              String
  addressLine3              String
  addressLine4              String
  addressLine5              String
  contactNo                 String
  email                     String         @unique
  role                      String
  staffEquipmentDetailsList StaffDetails[]
  vehicleList               Vehicle[]
  fieldList                 Field[]        @relation("FieldStaff")
  logList                   Log[]          @relation("LogStaff")
}

// Vehicle Entity
model Vehicle {
  vehicleCode        Int    @id @default(autoincrement())
  licensePlateNumber String
  name               String
  category           String
  fuelType           String
  remark             String
  status             String
  staff              Staff? @relation(fields: [staffId], references: [memberCode])
  staffId            Int?
}
