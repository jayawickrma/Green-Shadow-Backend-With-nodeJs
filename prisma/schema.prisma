generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// -----------------
// Crop Model
// -----------------
model Crop {
  cropCode         Int                @id @default(autoincrement())
  cropName         String
  scientificName   String
  category         String
  season           String
  cropImage        String             @db.LongText
  CropFieldDetails CropFieldDetails[]
  LogCropDetails   LogCropDetails[]
}

// -----------------
// Crop-Field Relationship (Join Table)
// -----------------
model CropFieldDetails {
  id        Int   @id @default(autoincrement())
  cropCode  Int
  fieldCode Int
  crop      Crop  @relation(fields: [cropCode], references: [cropCode], onDelete: Cascade, onUpdate: Cascade)
  field     Field @relation(fields: [fieldCode], references: [fieldCode], onDelete: Cascade, onUpdate: Cascade)

  @@index([fieldCode])
  @@index([cropCode])
}

// -----------------
// Equipment Model
// -----------------
model Equipment {
  equipmentCode         Int                     @id @default(autoincrement())
  name                  String
  type                  String
  status                String
  availableCount        Int
  EquipmentFieldDetails EquipmentFieldDetails[]
  EquipmentStaffDetails EquipmentStaffDetails[]
}

// -----------------
// Equipment-Field Relationship
// -----------------
model EquipmentFieldDetails {
  id            Int       @id @default(autoincrement())
  equipmentCode Int
  fieldCode     Int
  equipment     Equipment @relation(fields: [equipmentCode], references: [equipmentCode], onDelete: Cascade, onUpdate: Cascade)
  field         Field     @relation(fields: [fieldCode], references: [fieldCode], onDelete: Cascade, onUpdate: Cascade)

  @@index([fieldCode])
  @@index([equipmentCode])
}

// -----------------
// Equipment-Staff Relationship
// -----------------
model EquipmentStaffDetails {
  id            Int       @id @default(autoincrement())
  equipmentCode Int
  staffId       Int
  equipment     Equipment @relation(fields: [equipmentCode], references: [equipmentCode], onDelete: Cascade, onUpdate: Cascade)
  staff         Staff     @relation(fields: [staffId], references: [memberCode], onDelete: Cascade, onUpdate: Cascade)

  @@index([equipmentCode])
  @@index([staffId])
}

// -----------------
// Field Model
// -----------------
model Field {
  fieldCode             Int                     @id @default(autoincrement())
  name                  String
  location              String
  extentSize            String
  fieldImage            String                  @db.LongText
  CropFieldDetails      CropFieldDetails[]
  EquipmentFieldDetails EquipmentFieldDetails[]
  LogFieldsDetails      LogFieldsDetails[]
}

// -----------------
// Log Model
// -----------------
model Log {
  logCode          Int                @id @default(autoincrement())
  date             String
  logDetails       String
  observedImage    String             @db.LongText
  LogStaffDetails  LogStaffDetails[]
  LogCropDetails   LogCropDetails[]
  LogFieldsDetails LogFieldsDetails[]
}

// -----------------
// Log-Crop Relationship
// -----------------
model LogCropDetails {
  id       Int  @id @default(autoincrement())
  logCode  Int
  cropCode Int
  log      Log  @relation(fields: [logCode], references: [logCode], onDelete: Cascade, onUpdate: Cascade)
  crop     Crop @relation(fields: [cropCode], references: [cropCode], onDelete: Cascade, onUpdate: Cascade)

  @@index([logCode])
  @@index([cropCode])
}

// -----------------
// Log-Field Relationship
// -----------------
model LogFieldsDetails {
  id        Int   @id @default(autoincrement())
  logCode   Int
  fieldCode Int
  log       Log   @relation(fields: [logCode], references: [logCode], onDelete: Cascade, onUpdate: Cascade)
  field     Field @relation(fields: [fieldCode], references: [fieldCode], onDelete: Cascade, onUpdate: Cascade)

  @@index([logCode])
  @@index([fieldCode])
}

// -----------------
// Log-Staff Relationship
// -----------------
model LogStaffDetails {
  id      Int   @id @default(autoincrement())
  logCode Int
  staffId Int
  log     Log   @relation(fields: [logCode], references: [logCode], onDelete: Cascade, onUpdate: Cascade)
  staff   Staff @relation(fields: [staffId], references: [memberCode], onDelete: Cascade, onUpdate: Cascade)

  @@index([logCode])
  @@index([staffId])
}

// -----------------
// Staff Model
// -----------------
model Staff {
  memberCode            Int                     @id @default(autoincrement())
  firstName             String
  lastName              String
  joinedDate            String
  dateOfBirth           String
  gender                String
  designation           String
  addressLine1          String
  addressLine2          String
  addressLine3          String
  addressLine4          String
  addressLine5          String
  contactNo             String
  email                 String                  @unique
  role                  String
  EquipmentStaffDetails EquipmentStaffDetails[]
  LogStaffDetails       LogStaffDetails[]
}

// -----------------
// User Model
// -----------------
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
